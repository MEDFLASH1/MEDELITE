name: Agent Coordination System

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_cleanup:
        description: 'Force cleanup of expired locks'
        required: false
        default: 'false'
        type: boolean

env:
  NODE_VERSION: '20'

jobs:
  detect-concurrent-agents:
    name: Detect Concurrent Agents
    runs-on: ubuntu-latest
    outputs:
      has-conflicts: ${{ steps.check-conflicts.outputs.has-conflicts }}
      active-agents: ${{ steps.detect-agents.outputs.active-agents }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check for merge conflicts
      id: check-conflicts
      run: |
        echo "Checking for merge conflicts..."
        if npm run validate:conflicts; then
          echo "has-conflicts=false" >> $GITHUB_OUTPUT
          echo "✅ No merge conflicts detected"
        else
          echo "has-conflicts=true" >> $GITHUB_OUTPUT
          echo "⚠️ Merge conflicts detected"
        fi

    - name: Detect active agents
      id: detect-agents
      run: |
        echo "Detecting active agents..."
        AGENT_COUNT=$(node scripts/agent-coordination.cjs 2>/dev/null | grep -c "agentes activos" || echo "0")
        echo "active-agents=$AGENT_COUNT" >> $GITHUB_OUTPUT
        echo "Active agents detected: $AGENT_COUNT"

    - name: Force cleanup if requested
      if: ${{ github.event.inputs.force_cleanup == 'true' }}
      run: |
        echo "🧹 Force cleanup requested"
        npm run agent:cleanup

  coordinate-merge:
    name: Coordinate Intelligent Merge
    runs-on: ubuntu-latest
    needs: detect-concurrent-agents
    if: ${{ needs.detect-concurrent-agents.outputs.has-conflicts == 'true' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure Git
      run: |
        git config --global user.name "Agent Coordinator"
        git config --global user.email "agent-coordinator@github-actions.local"

    - name: Attempt intelligent merge
      id: intelligent-merge
      run: |
        echo "🤖 Starting intelligent merge process..."
        
        # Start agent workflow
        if npm run agent:start; then
          echo "✅ Agent workflow started successfully"
          
          # Attempt to resolve conflicts automatically
          if npm run fix:conflicts; then
            echo "✅ Conflicts resolved automatically"
            echo "merge-success=true" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Manual intervention required"
            echo "merge-success=false" >> $GITHUB_OUTPUT
          fi
          
          # Finish workflow
          npm run agent:finish "fix: Auto-resolve conflicts via GitHub Actions"
        else
          echo "❌ Agent workflow failed to start"
          echo "merge-success=false" >> $GITHUB_OUTPUT
        fi

    - name: Create issue for manual intervention
      if: ${{ steps.intelligent-merge.outputs.merge-success == 'false' }}
      uses: actions/github-script@v7
      with:
        script: |
          const title = '🚨 Manual Merge Intervention Required';
          const body = `
          ## Merge Conflict Resolution Required
          
          The automatic merge process was unable to resolve conflicts in this repository.
          
          **Details:**
          - **Workflow Run:** ${{ github.run_id }}
          - **Commit:** ${{ github.sha }}
          - **Branch:** ${{ github.ref_name }}
          - **Active Agents:** ${{ needs.detect-concurrent-agents.outputs.active-agents }}
          
          **Next Steps:**
          1. Review the conflicts manually
          2. Use the agent coordination system: \`npm run agent:start\`
          3. Resolve conflicts and run: \`npm run agent:finish\`
          4. Close this issue when resolved
          
          **Agent Coordination Commands:**
          \`\`\`bash
          npm run agent:status      # Check current status
          npm run agent:coordinate  # Manual coordination
          npm run agent:cleanup     # Clean expired locks
          \`\`\`
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['merge-conflict', 'agent-coordination', 'high-priority']
          });

  validate-integrity:
    name: Validate Code Integrity
    runs-on: ubuntu-latest
    needs: [detect-concurrent-agents, coordinate-merge]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run integrity checks
      run: |
        echo "🔍 Running comprehensive integrity checks..."
        npm run integrity:check

    - name: Validate agent system
      run: |
        echo "🤖 Validating agent coordination system..."
        
        # Test agent coordination
        timeout 10s npm run agent:coordinate || echo "Agent coordination test completed"
        
        # Check system status
        npm run agent:status
        
        echo "✅ Agent system validation completed"

  cleanup-expired-locks:
    name: Cleanup Expired Locks
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Cleanup expired locks
      run: |
        echo "🧹 Cleaning up expired agent locks..."
        npm run agent:cleanup
        
        # Remove any leftover lock files
        if [ -d ".agent-locks" ]; then
          find .agent-locks -name "*.lock" -mmin +5 -delete
          echo "✅ Expired locks cleaned up"
        else
          echo "ℹ️ No lock directory found"
        fi

  report-status:
    name: Report Agent Status
    runs-on: ubuntu-latest
    needs: [detect-concurrent-agents, coordinate-merge, validate-integrity, cleanup-expired-locks]
    if: always()
    
    steps:
    - name: Generate status report
      run: |
        echo "## 🤖 Agent Coordination System Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Workflow:** ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
        echo "**Run ID:** ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **Conflicts Detected:** ${{ needs.detect-concurrent-agents.outputs.has-conflicts }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Active Agents:** ${{ needs.detect-concurrent-agents.outputs.active-agents }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Merge Coordination:** ${{ needs.coordinate-merge.result || 'Skipped' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Integrity Validation:** ${{ needs.validate-integrity.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Cleanup:** ${{ needs.cleanup-expired-locks.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.detect-concurrent-agents.outputs.has-conflicts }}" == "true" ]; then
          echo "⚠️ **Action Required:** Merge conflicts were detected and may require manual intervention." >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ **Status:** All systems operational, no conflicts detected." >> $GITHUB_STEP_SUMMARY
        fi

